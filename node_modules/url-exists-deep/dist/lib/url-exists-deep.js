'use strict';

var request = require('request');

var urlExistsDeep = function urlExistsDeep(url) {
  var header = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var method = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'HEAD';
  var timeout = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 5000;
  var pool = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};
  var prevStatus = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;
  return new Promise(function (resolve, reject) {
    var headers = header;
    request({
      url: url,
      method: method,
      headers: headers,
      followRedirect: false,
      timeout: timeout,
      pool: pool
    }, function (err, res) {
      if (err) {
        reject(err);
        return;
      }

      var checkUrl = void 0;
      if (/4\d\d/.test(res.statusCode) && res.statusCode !== 403) {
        resolve(false);
        return;
      }

      if (res.statusCode === 403) {
        if (prevStatus === 403) {
          resolve(false);
          return;
        }
        checkUrl = res.request.uri.href;
        headers = { Accept: 'text/html', 'User-Agent': 'Mozilla/5.0' };
        method = 'GET';
      } else if (res.statusCode === 301) {
        if (!res.headers.location.includes('://')) {
          checkUrl = res.request.uri.protocol + '//' + res.request.uri.host + res.headers.location;
        } else checkUrl = res.headers.location;
      }

      if (checkUrl) {
        urlExistsDeep(checkUrl, headers, method, timeout, pool, res.statusCode).then(resolve).catch(reject);
      } else resolve(res.request.uri);
    });
  });
};

module.exports = urlExistsDeep;